#!/usr/bin/env ruby

# Used for local testing
$LOAD_PATH.unshift File.join(File.dirname(__FILE__), '..', 'lib') if ENV["DEV"] == "1"

require 'huebot'

Huebot::CLI::Helpers.tap { |cli|
  case cli.get_cmd
  when :ls
    cli.get_args!(num: 0)
    opts = cli.get_opts!
    bridge, error = Huebot::Bridge.connect
    if error
      $stderr.puts error
      exit 1
    end

    retval = Huebot::CLI::Runner.ls(bridge.lights, bridge.groups, opts)
    exit retval

  when :run
    opts = cli.get_opts!
    sources = cli.get_input! opts
    if sources.empty?
      cli.help!
      exit 1
    end

    bridge, error = Huebot::Bridge.connect
    if error
      $stderr.puts error
      exit 1
    end

    retval = Huebot::CLI::Runner.run(sources, bridge.lights, bridge.groups, opts)
    exit retval

  when :check
    opts = cli.get_opts!
    sources = cli.get_input! opts
    if sources.empty?
      cli.help!
      exit 1
    end

    lights, groups =
      if opts.no_device_check
        [[], []]
      else
        bridge, error = Huebot::Bridge.connect
        if error
          $stderr.puts error
          exit 1
        end
        [bridge.lights, bridge.groups]
      end

    retval = Huebot::CLI::Runner.check(sources, lights, groups, opts)
    exit retval

  when :"get-state"
    opts = cli.get_opts!
    if opts.inputs.empty?
      cli.help!
      exit 1
    end

    bridge, error = Huebot::Bridge.connect
    if error
      $stderr.puts error
      exit 1
    end

    retval = Huebot::CLI::Runner.get_state(bridge.lights, bridge.groups, opts)
    exit retval

  when :"set-ip"
    opts = cli.get_opts!
    ip = cli.get_args!(num: 1).first
    config = Huebot::CLI::Config.new
    retval = Huebot::CLI::Runner.set_ip config, ip, opts
    exit retval

  when :"clear-ip"
    opts = cli.get_opts!
    cli.get_args!(num: 0)
    config = Huebot::CLI::Config.new
    retval = Huebot::CLI::Runner.clear_ip config, opts
    exit retval

  when :unregister
    opts = cli.get_opts!
    cli.get_args!(num: 0)
    config = Huebot::CLI::Config.new
    retval = Huebot::CLI::Runner.unregister config, opts
    exit retval

  else cli.help!
  end
}
